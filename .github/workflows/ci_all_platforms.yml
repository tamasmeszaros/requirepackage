name: CI-all-platforms

on: [push]

jobs:
  build-gcc:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Install opengl
      run: sudo apt update && sudo apt install -y libgtk2.0-dev libgl1-mesa-dev libglu1-mesa-dev ninja-build
    - name: Build the example
      run: mkdir -p build-gcc && cd build-gcc && cmake ../tests -DRP_ENABLE_DOWNLOADING=ON -DRP_CONFIGURATION_TYPES=Release
    - name: Build all packages
      run: |
        mkdir -p build-all-gcc 
        cd build-all-gcc
        cmake ../packages -GNinja -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE=Release -DRP_FORCE_DOWNLOADING=ON
        cmake --build .

  build-mac:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build the example
      run: mkdir -p build-mac && cd build-mac && cmake ../tests -DRP_ENABLE_DOWNLOADING=ON -DRP_CONFIGURATION_TYPES=Release -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9
    - name: Build all packages
      run: |
        export PATH=$(brew --prefix gettext)/bin:$PATH
        msgfmt --version
        mkdir -p build-all-mac 
        cd build-all-mac 
        cmake ../packages -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9 -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE=Release -DRP_FORCE_DOWNLOADING=ON
        cmake --build . -- -j

  build-msvc:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build the example
      run: |
        mkdir build-win 
        cd build-win 
        cmake ../tests -DRP_ENABLE_DOWNLOADING=ON -DRP_CONFIGURATION_TYPES=Release
    - name: Build all packages
      run: |
        mkdir build-all-win
        cd build-all-win
        cmake ../packages -DBUILD_SHARED_LIBS=OFF -DRP_FORCE_DOWNLOADING=ON
        cmake --build . --config Release -- /m
    - uses: actions/upload-artifact@v1
      with:
        name: windows-static-64bit
        path: build-all-win/destdir/usr/local

  build-mingw:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Download ninja
      run: choco install ninja
    - name: Build the example
      run: |
        mkdir build-mingw
        cd build-mingw 
        cmake ../tests -GNinja -DCMAKE_CXX_COMPILER=x86_64-w64-mingw32-g++ -DCMAKE_C_COMPILER=x86_64-w64-mingw32-gcc -DCMAKE_RC_COMPILER=windres -DRP_CONFIGURATION_TYPES=Release -DRP_ENABLE_DOWNLOADING=ON
    - name: Build all packages
      run: |
        mkdir build-all-mingw
        cd build-all-mingw
        cmake ../packages -GNinja -DCMAKE_CXX_COMPILER=x86_64-w64-mingw32-g++ -DCMAKE_C_COMPILER=x86_64-w64-mingw32-gcc -DCMAKE_RC_COMPILER=windres -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DRP_FORCE_DOWNLOADING=ON
        cmake --build .
    - uses: actions/upload-artifact@v1
      with:
        name: mingw-static-64bit
        path: build-all-mingw/destdir/usr/local
